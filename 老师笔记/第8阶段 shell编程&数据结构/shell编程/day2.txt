	
16 持续集成（CI）
	概念：多个开发人员不停地把工作合并到一起
	
	解决的问题：程序员提交代码后不能及时保证合并结果符合预期。

17 自动编译案例
	1 git 获取最新代码
		git archive --remote="远程或本地仓库路径" --fomat="tar或zip" -o "下载后代码包的名称" "分支名"
		（获取到的是纯代码，没有.git目录）
		
	
	2 需求分解：
		1 脚本实现获取代码和编译
		2 post-receive中调用脚本
		
	3 手动执行获取代码并编译
		1，创建本次提交独立的目录
			cd /home/git/web_project
			mkdir 82fbXXXX52_`date +%Y%m%d%H%M%S`_hello_web
		2 获取代码（CI服务器）（基于提交存储最新代码）
			cd /home/git/web_project/82fbXXXX52_20181212181655_hello_web
			git archive --remote=/usr/git_repos/hello_web.git --format=tar -o project.tar master
		3 解压代码
			cd /home/git/web_project/82fbXXXX52_20181212181655_hello_web
			tar xf project.tar
		4 编译代码
			GOPATH=/home/git/web_project/82fbXXXX52_20181212181655_hello_web go install main
			
	
	4 生产脚本的编写思路
		1 确定框架（步骤-----》函数）
		2 命令填充（命令拷贝到函数里）
		3 功能扩充
	
	5 脚本调试
		-n 检查语法错误
		-x 显示一条执行一条